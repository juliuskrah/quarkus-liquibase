# Default values for quarkus-api-training.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: IMG_TAG
  tag: ""
  pullPolicy: Always
  pullSecrets:
    - nexdock

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}

securityContext: {}

service:
  enabled: SVC_STATUS
  type: SVC_TYPE
  port: SVC_PORT
  hostname: SVC_HOST
  environment: SVC_ENV
  nodegroup: "tinggintegrations"
  secrets:
    enabled: true

secret:
  postgresql:
    username: postgres
    password: kew65(h12%6^g
  
#Read more about this at the link below:
#https://www.getambassador.io/docs/1.14/topics/using/timeouts/
ambassador:
  timeoutMs: 3000 
  connectTimeoutms: 30000
  idleTimeoutms: 3000


# NOTE YOU CAN ONLY ENABLE ONE KEDA AUTOSCALING POLICY, READ DOCS ON SCALES BEFORE USE: https://keda.sh/docs/2.6/scalers/
#
# Rabbitmq scaler docs:
# See keda docs https://keda.sh/docs/2.6/scalers/rabbitmq-queue/#amqp-protocol
# keda host should be <AMQP URI connection string> # base64 encoded value of format amqp://guest:password@localhost:5672/vhost
#
# prometheus scaler docs:
# see docs https://keda.sh/docs/2.6/scalers/prometheus/
#
# memory scaler docs:
# see docs https://keda.sh/docs/2.6/scalers/prometheus/

keda:
  prometheus:
    enabled: false
    serverAddress: "http://expose-prometheus-metrics.cattle-prometheus-p-8wpgj.svc:9090"
    threshold: 7000
    pollingInterval: 160
    cooldownPeriod: 20
    minReplicaCount: 2
    maxReplicaCount: 5
  
  rabbitmq:
    enabled: false
    host: "<AMQP URI connection string> # base64 encoded value of format amqp://guest:password@localhost:5672/vhost"
    queueName: "test"
    value: "10000"
    pollingInterval: 160
    cooldownPeriod: 20
    minReplicaCount: 2
    maxReplicaCount: 5

  memory:
    enabled: false
    pollingInterval: 160
    cooldownPeriod: 20
    minReplicaCount: 2
    maxReplicaCount: 5
  

## The following settings are to configure the frequency of the liveness and readiness probes
livenessProbe:
  initialDelaySeconds: 5
  periodSeconds: 60

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 60  

ingress:
  enabled: INGRESS_ALB
  annotations: 
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": SVC_PORT }]'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/success-codes: '200'

  hosts:
    - host: ['*']
      paths: ['/*']
  tls: []

resources:
  limits:
    cpu: 80m
    memory: 40Mi
  requests:
    cpu: 60m
    memory: 20Mi

cronjobservice:
  enabled: false
  cron: "0 22 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  

nodeSelector: {}

tolerations: []

affinity: {}

# A map of additional environment variables
extraVars: 
  QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://payouts-liquibase-cluster/quarkus"
  QUARKUS_DATASOURCE_REACTIVE_POSTGRESQL_SSL_MODE: "disable"
  QUARKUS_DATASOURCE_REACTIVE_TRUST_ALL: "true" 
  
